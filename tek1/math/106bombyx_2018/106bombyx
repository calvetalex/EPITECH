#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys

def disp_h():
    print("USAGE\n\t./106bombyx n [k | i0 i1]")
    print("DESCRIPTION\n\tn\tnumber of first generation individuals")
    print("\tk\tgrowth rate form 1 to 4")
    print("\ti0\tinitial generation (included)")
    print("\ti1\tfinal generation (included)\n")

def o1_o2_given (nb_papillons, o1, o2):
    k = 1
    counter = 2
    new_nb_papillons = 0

    if counter >= o1 and counter <= o2:
        print ("{:.2f} {:.2f}".format(k, new_nb_papillons))
    while k <= 4:
        new_nb_papillons = nb_papillons
        while counter <= o2:
            if counter >= o1 and counter <= o2:
                print ("{:.2f} {:.2f}".format(k, new_nb_papillons))
            new_nb_papillons = k * new_nb_papillons * ((1000-new_nb_papillons)/1000)
            counter = counter + 1
        counter = 0
        k = k + 0.01

def k_given (nb_papillons, k):
    print ("1 {:.2f}".format(nb_papillons))
    for i in range(2, 101):
        nb_papillons = k * nb_papillons * ((1000-nb_papillons)/1000)
        print (i, "{:.2f}".format(nb_papillons))

def main ():
    if (len(sys.argv) == 2):
        if (sys.argv[1] == "-h"):
            disp_h()
            exit (0)
        else :
            exit (84)
    elif (int(len(sys.argv)) == 3):
        k_given(int(sys.argv[1]), float(sys.argv[2]))
        exit (0)
    elif (int(len(sys.argv))== 4):
        o1_o2_given(int(sys.argv[1]),int(sys.argv[2]),int(sys.argv[3]))
        exit (0)
    else :
        exit (84)

main()
