#!/usr/bin/env python3

import sys
import time
import math

def usage():
    print("USAGE:\n\t./203hotline [n k | d]\n")
    print("DESCRIPTION:\n\tn\tn value for the computation of (n k)\n\tk\tk value for the computation of (n k)\n\td\taverage duration of calls (in seconds)")
    exit(0)

def coef(n, k):
    return (math.factorial(n) // (math.factorial(k) * math.factorial(n - k)))

def binomiale(d):
    start = time.time()
    overload = 1
    i = 0
    p = d / (3600 * 8)
    binoLaw = (coef(3500, i)) * (p**i) * ((1 - p)**(3500 - i))
    print(f"Binomial distribution:\n{i} -> {binoLaw:.3f}", end='')
    for i in range(1, 51):
        if (i <= 26):
            overload -= binoLaw
        if (i > 0 and (i % 5) != (0)):
            print("\t", end='')
        binoLaw = (coef(3500, i)) * (p**i) * ((1 - p)**(3500 - i))
        print(f"{i} -> {binoLaw:.3f}", end='')
        if ((i + 1) % 5 == 0):
            print()
    end = time.time()
    print(f"\nOverload: {overload * 100:.1f}%")
    print(f"computation time: {end - start:.2f} ms")

def fish(d):
    start = time.time()
    overload = 1
    i = 0
    l = 3500 * (d / (3600 * 8))
    law = math.exp(-l) * math.pow(l, i) / math.factorial(i)
    print(f"Poisson distribution:\n{i} -> {law:.3f}", end='')
    for i in range(1, 51):
        if (i <= 26):
            overload -= law
        if (i > 0 and (i % 5) != (0)):
            print("\t", end='')
        law = math.exp(-l) * math.pow(l, i) / math.factorial(i)
        print(f"{i} -> {law:.3f}", end='')
        if ((i + 1) % 5 == 0):
            print()
    end = time.time()
    print(f"\nOverload: {overload * 100:.1f}%")
    print(f"computation time: {end - start:.2f} ms")

def main():
    if (len(sys.argv) > 3 or len(sys.argv) < 2):
        exit(84)
    else:
        try:
            if ("-h" in sys.argv or "--help" in sys.argv):
                usage()
            elif(len(sys.argv) == 2):
                binomiale(int(sys.argv[1]))
                print("")
                fish(int(sys.argv[1]))
                exit(0)
            elif(len(sys.argv) == 3):
                print(f"{int(sys.argv[2])}-combinations of a set of size {int(sys.argv[1])}:\n{coef(int(sys.argv[1]), int(sys.argv[2]))}")
                exit(0)
        except ValueError:
            exit(84)

main()
