#!/usr/bin/env python3

import sys
import math


def isNumber(value):
    try:
        float(value)
        return True
    except ValueError:
        return False


def usage(returnValue = 0):
    print("USAGE\n\t./206neutrinos n a h sd\n")
    print("DESCRIPTION\n\tn\tnumber of values")
    print("\ta\tarithmetic mean")
    print("\th\tharmonic mean")
    print("\tsd\tstandard deviation")
    sys.exit(returnValue)


def displayStep(n, sd, a, quad, h):
    print(f'\tNumbre of values:\t{n:.0f}')
    print(f'\tStandard deviation:\t{sd:.2f}')
    print(f'\tArithmetic mean:\t{a:.2f}')
    print(f'\tRoot mean square:\t{quad:.2f}')
    print(f'\tHarmonic mean:\t\t{h:.2f}\n')
    return(0)


def calculate(n, a, h, sd):
    line = str("")
    res = float(0)
    while (True):
        line = input("Enter next value: ")
        if not isNumber(line):
            if line == "END":
                break
            else:
                print("ERROR: value must be an int or a float", file=sys.stderr)
                sys.exit(84)
        value = float(line)
        quadMean = (math.pow(a, 2) + math.pow(sd, 2)) * n
        n += 1
        a = ((a * (n-1)) + value) / n
        quad =  math.sqrt((quadMean + math.pow(value, 2)) / n)
        sd =  math.sqrt(((quadMean + math.pow(value, 2)) / n) - math.pow(a, 2))
        h = n / ((1 / value) + ((n - 1) / h))
        displayStep(n, sd, a, quad, h)
    return(0)


def main():
    try:
        if "-h" in sys.argv or "--help" in sys.argv:
            usage()
        elif len(sys.argv) != 5:
            usage(84)
        else:
            n = float(sys.argv[1]) 
            a = float(sys.argv[2])
            h = float(sys.argv[3])
            sd = float(sys.argv[4])
            if n <= 0 or a <= 0 or h <= 0 or sd < 0:
                usage(84)
            calculate(n, a, h, sd)
    except (ValueError, IndexError):
        usage(84)
    sys.exit(0)

main()
